###########################
# Top 13 tmux Configuration that you should consider while start using tmux for three reasons:
# 
# 1. tmux has a lot of less-than-stellar default setting
# 2. Keyboard shortcuts in tmux are a bit of a stretch, both physically and mentally
# 2. And, Configuration is fun, especially when you customize as per your need and taste
# 
# Let's make it friendly, and along the way, do not forget to put more comments in your configuration file; they'll jog your memory later.
###########################

# Start with the biggie - <prefix>

# [1] Easier Prefix: 
#
# Why: Using ctrl+b is a little hard to trigger as the keyboard button is pretty far. Most prefer the 'C-a' key, considering CapsLock can be remapped with Ctr, and A sits just next to the CapsLock. If you have already used the GNU screen, 'C-a' is the usual keys for you.
unbind C-b                  # free the original bind key
set-option -g prefix C-a    # setting the prefix from C-b to C-a (-g for global)
bind-key C-a send-prefix    # ensure that we can send Ctrl-A to other apps

# [2] Shortcut to Reload the Config:
#
# Why: There are two ways of reloading 1.shutting down all tmux sessions and restart them 2. executing 'source-file ~/.tmux.conf' on all the sessions. Let's make it easy to reload our config file between changes by new keybinding.
bind-key r source-file ~/.tmux.conf \; display "Config Reloaded !"

# [3] Count like Human: 
#
# Why: By default, the windows or panes start with index 0 (silly programmers!). Though Tmux is one of those “created by and for programmers”, this indexing makes it challenging to do switching windows; window 0 will be all the way to
set-option -g base-index 1                # window index will start with 1
set-window-option -g pane-base-index 1    # pane index will start with 1

# [4] Kill it with X-Force! 
#
# Why: By default, if you press <prefix> x, tmux will ask if you're sure you want to kill a pane before it does it. That's nice and all, but what if you'd rather just kill it? Let's do that.
unbind x               # unbind “x” from it’s current job of “ask andthen close”
bind x kill-pane       # rebind it to just “close”
bind X kill-session    # and, while we’re at it, let’s create a key combo for killing the entire session

# [5] Make Splitting Panes Intuitive: 
#
# Why: Splitting a window in panes are currently bound to <prefix> % and <prefix> ”>, which are hard to remember. It is much easier to remember if you use | for vertical splits and - for horizontal splits.
bind | split-window -h    
bind - split-window -v    
unbind %                 # You can leave the original options bound, 
unbind '"'               # if you don’t have any other use for these weird key commands.

# [6] Remapping Movement Keys (Vim Style):
# 
# Why: One of the main reasons for using tmux is because it’s keyboard-centric and plays well with Vim, another favourite keyboard-centric tool. If you use the Vim, you’re probably familiar with its use of h, j, k, and l for movement keys. This way, you do not have to take your fingers off the home row to move to arrow keys.
bind h select-pane -L              # go left
bind l select-pane -R              # go right

bind j select-pane -D              # go down
bind k select-pane -U              # go up

bind -r C-h select-window -t :-    # cycle through the windows for quick window selection
bind -r C-l select-window -t :+

# [7] Resizing Panes:
#
# Why: To make it easy to remember, let’s use a variation of the Vim movement keys to resize windows. You need to use the SHIFT key to trigger the uppercase keystroke. To avoid using the PREFIX each time you want to resize the pane, set repeatable mode. I presume, by now, you did the capslock remapping to Ctrl.
bind -r H resize-pane -L 2         # resize a pane two rows at a time.
bind -r L resize-pane -R 2

bind -r J resize-pane -D 2
bind -r K resize-pane -U 2

# [8] Change Default Shell & Editor
# 
# Why: It is effective to start pane with your prefered shell instead of starting with system gobal defalut and making change after that
set-option -g default-shell /usr/bin/zsh
set -g status-keys vi

# [9] Enable Mouse Support: 
#
# tmux is completely keyboard driven but at times mouse usage can come handy for easier movements
# setw -g mouse on

# [10] Change the Default Delay: The default delay value between Prefix combination and command is very less and sometimes doesn't work so we can increase the delay value
set -s escape-time 5

# [11] Navigating in Copy Mode: Turning Tmux into Vim
# 
# Let's face it, moving around a screen with the arrow keys, one space at a time, is a drag. It's an especially a huge drag if you're scrolling back through miles of errors. tmux makes it easy to adopt pretty much all of vim's motion keys, including searches...
setw -g mode-keys vi

# [12] Visual Styling: Configuring Colors
#
# Set the default terminal mode to 256color mode 
#
# Why: Once the right color mode is set, you’ll find it much easier to use programs such as Vim, Emacs, and other full-color programs from within tmux, especially when you are using more complex color schemes for shell or syntax highlighting
#
####

set -g default-terminal "screen-256color"

# Status Bar
set -g status-style fg=white,bg=colour04             
setw -g window-status-style fg=colour118,bg=colour04 
setw -g window-status-current-style fg=black,bold,bg=colour011 

# Pane divider
setw -g pane-border-style fg=colour11,bg=colour234           
setw -g pane-active-border-style fg=colour118,bg=colour234 

# Cool trick: Let's dim out any pane that's not active.
setw -g window-style fg=white,bg=colour236
setw -g window-active-style fg=white,bg=colour235

# Command / Message line
setw -g message-style fg=black,bold,bg=colour11

# [13] Customizing the Status Line's Content
#
# Add session, window, pane indexes - good to know 
set -g status-left-length 40
set -g status-left "[#[fg=white]S: #S, #[fg=colour11]W #I-#W, #[fg=colour3]P: #P #[fg=white]]"

# Center the window list in the status line - this is much better 
set -g status-justify centre

# enable activity alerts
set -g status-interval 60
setw -g monitor-activity on # highlights the window name in the status line
# set -g visual-activity on # show a message in the status line 

###########################
###  The below section is a Cheatsheet 
###
###  - for some of the very useful unchanged keybindings 
############################

### Default Layouts
#
# <prefix> <alt>1  Switch to Even Horizontal Layout
# <prefix> <alt>2  Switch to Even Vertical Layout
# <prefix> <alt>3  Switch to Main Vertical Layout
# <prefix> <alt>4  Switch to Main Horizontal Layout
# <prefix> <alt>5  Switch to Tiled Layout
# <prefix> <space> Rotate through the default layouts
#
###

### Resizing Panes (remember we have enabled Vim Style also)
#
# <prefix> <ctrl>up      increase the height of this pane by one row
# <prefix> <ctrl>down    decrease the height of this pane by one row
# <prefix> <ctrl>left    increase the width of this pane by one column
# <prefix> <ctrl>right   decrease the width of this pane by one column
# <prefix> <alt>up       increase the height of this pane by five rows
# <prefix> <alt>down     decrease the height of this pane by five rows
# <prefix> <alt>left     increase the width of this pane by five columns
# <prefix> <alt>right    decrease the width of this pane by five columns
#
###

### Switching Windows
#
# <prefix> 0-9    Switch to window 0-9 - good enough for quick switch
# <prefix> w      Choose a window from a menu
# <prefix> c      Create a new window
# <prefix> ,      Rename current window
# <prefix> n      Cycle to next window
# <prefix> p      Cycle to previous window
# <prefix> !      Breaking Window Panes If you have too many panes in a single window.
###

### Session Commands
#
# <prefix> ( Switch to previous session
# <prefix> ) Switch to next session
# <prefix> s Choose from a list of sessions
# <prefix> $ Rename the session
# <prefix> d Detach from your current session
#
###

### Copy Mode
#
# <prefix> [ Enter Copy Mode
# <prefix> ] Paste current buffer
# <prefix> = List all buffers and choose one from which to paste
# <space> (in copy mode) Start selection
# <enter> (in copy mode) Exit copy mode, copy selection to buffer
###
